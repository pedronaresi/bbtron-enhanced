$comment
	File created using the following command:
		vcd file bbtronenhanced.msim.vcd -direction
$end
$date
	Tue Jun 20 22:07:06 2017
$end
$version
	ModelSim Version 10.5b
$end
$timescale
	1ps
$end

$scope module bbtronenhancedCPU_vlg_vec_tst $end
$var reg 1 ! clock $end
$var reg 16 " switches [15:0] $end
$var wire 1 # wire_RAMOutput [31] $end
$var wire 1 $ wire_RAMOutput [30] $end
$var wire 1 % wire_RAMOutput [29] $end
$var wire 1 & wire_RAMOutput [28] $end
$var wire 1 ' wire_RAMOutput [27] $end
$var wire 1 ( wire_RAMOutput [26] $end
$var wire 1 ) wire_RAMOutput [25] $end
$var wire 1 * wire_RAMOutput [24] $end
$var wire 1 + wire_RAMOutput [23] $end
$var wire 1 , wire_RAMOutput [22] $end
$var wire 1 - wire_RAMOutput [21] $end
$var wire 1 . wire_RAMOutput [20] $end
$var wire 1 / wire_RAMOutput [19] $end
$var wire 1 0 wire_RAMOutput [18] $end
$var wire 1 1 wire_RAMOutput [17] $end
$var wire 1 2 wire_RAMOutput [16] $end
$var wire 1 3 wire_RAMOutput [15] $end
$var wire 1 4 wire_RAMOutput [14] $end
$var wire 1 5 wire_RAMOutput [13] $end
$var wire 1 6 wire_RAMOutput [12] $end
$var wire 1 7 wire_RAMOutput [11] $end
$var wire 1 8 wire_RAMOutput [10] $end
$var wire 1 9 wire_RAMOutput [9] $end
$var wire 1 : wire_RAMOutput [8] $end
$var wire 1 ; wire_RAMOutput [7] $end
$var wire 1 < wire_RAMOutput [6] $end
$var wire 1 = wire_RAMOutput [5] $end
$var wire 1 > wire_RAMOutput [4] $end
$var wire 1 ? wire_RAMOutput [3] $end
$var wire 1 @ wire_RAMOutput [2] $end
$var wire 1 A wire_RAMOutput [1] $end
$var wire 1 B wire_RAMOutput [0] $end
$var wire 1 C wire_data1 [31] $end
$var wire 1 D wire_data1 [30] $end
$var wire 1 E wire_data1 [29] $end
$var wire 1 F wire_data1 [28] $end
$var wire 1 G wire_data1 [27] $end
$var wire 1 H wire_data1 [26] $end
$var wire 1 I wire_data1 [25] $end
$var wire 1 J wire_data1 [24] $end
$var wire 1 K wire_data1 [23] $end
$var wire 1 L wire_data1 [22] $end
$var wire 1 M wire_data1 [21] $end
$var wire 1 N wire_data1 [20] $end
$var wire 1 O wire_data1 [19] $end
$var wire 1 P wire_data1 [18] $end
$var wire 1 Q wire_data1 [17] $end
$var wire 1 R wire_data1 [16] $end
$var wire 1 S wire_data1 [15] $end
$var wire 1 T wire_data1 [14] $end
$var wire 1 U wire_data1 [13] $end
$var wire 1 V wire_data1 [12] $end
$var wire 1 W wire_data1 [11] $end
$var wire 1 X wire_data1 [10] $end
$var wire 1 Y wire_data1 [9] $end
$var wire 1 Z wire_data1 [8] $end
$var wire 1 [ wire_data1 [7] $end
$var wire 1 \ wire_data1 [6] $end
$var wire 1 ] wire_data1 [5] $end
$var wire 1 ^ wire_data1 [4] $end
$var wire 1 _ wire_data1 [3] $end
$var wire 1 ` wire_data1 [2] $end
$var wire 1 a wire_data1 [1] $end
$var wire 1 b wire_data1 [0] $end
$var wire 1 c wire_negative $end
$var wire 1 d wire_out1 [6] $end
$var wire 1 e wire_out1 [5] $end
$var wire 1 f wire_out1 [4] $end
$var wire 1 g wire_out1 [3] $end
$var wire 1 h wire_out1 [2] $end
$var wire 1 i wire_out1 [1] $end
$var wire 1 j wire_out1 [0] $end
$var wire 1 k wire_out2 [6] $end
$var wire 1 l wire_out2 [5] $end
$var wire 1 m wire_out2 [4] $end
$var wire 1 n wire_out2 [3] $end
$var wire 1 o wire_out2 [2] $end
$var wire 1 p wire_out2 [1] $end
$var wire 1 q wire_out2 [0] $end
$var wire 1 r wire_out3 [6] $end
$var wire 1 s wire_out3 [5] $end
$var wire 1 t wire_out3 [4] $end
$var wire 1 u wire_out3 [3] $end
$var wire 1 v wire_out3 [2] $end
$var wire 1 w wire_out3 [1] $end
$var wire 1 x wire_out3 [0] $end
$var wire 1 y wire_out_pcsrc [31] $end
$var wire 1 z wire_out_pcsrc [30] $end
$var wire 1 { wire_out_pcsrc [29] $end
$var wire 1 | wire_out_pcsrc [28] $end
$var wire 1 } wire_out_pcsrc [27] $end
$var wire 1 ~ wire_out_pcsrc [26] $end
$var wire 1 !! wire_out_pcsrc [25] $end
$var wire 1 "! wire_out_pcsrc [24] $end
$var wire 1 #! wire_out_pcsrc [23] $end
$var wire 1 $! wire_out_pcsrc [22] $end
$var wire 1 %! wire_out_pcsrc [21] $end
$var wire 1 &! wire_out_pcsrc [20] $end
$var wire 1 '! wire_out_pcsrc [19] $end
$var wire 1 (! wire_out_pcsrc [18] $end
$var wire 1 )! wire_out_pcsrc [17] $end
$var wire 1 *! wire_out_pcsrc [16] $end
$var wire 1 +! wire_out_pcsrc [15] $end
$var wire 1 ,! wire_out_pcsrc [14] $end
$var wire 1 -! wire_out_pcsrc [13] $end
$var wire 1 .! wire_out_pcsrc [12] $end
$var wire 1 /! wire_out_pcsrc [11] $end
$var wire 1 0! wire_out_pcsrc [10] $end
$var wire 1 1! wire_out_pcsrc [9] $end
$var wire 1 2! wire_out_pcsrc [8] $end
$var wire 1 3! wire_out_pcsrc [7] $end
$var wire 1 4! wire_out_pcsrc [6] $end
$var wire 1 5! wire_out_pcsrc [5] $end
$var wire 1 6! wire_out_pcsrc [4] $end
$var wire 1 7! wire_out_pcsrc [3] $end
$var wire 1 8! wire_out_pcsrc [2] $end
$var wire 1 9! wire_out_pcsrc [1] $end
$var wire 1 :! wire_out_pcsrc [0] $end

$scope module i1 $end
$var wire 1 ;! gnd $end
$var wire 1 <! vcc $end
$var wire 1 =! unknown $end
$var tri1 1 >! devclrn $end
$var tri1 1 ?! devpor $end
$var tri1 1 @! devoe $end
$var wire 1 A! switches[8]~input_o $end
$var wire 1 B! switches[9]~input_o $end
$var wire 1 C! switches[10]~input_o $end
$var wire 1 D! switches[11]~input_o $end
$var wire 1 E! switches[12]~input_o $end
$var wire 1 F! switches[13]~input_o $end
$var wire 1 G! switches[14]~input_o $end
$var wire 1 H! switches[15]~input_o $end
$var wire 1 I! wire_out1[0]~output_o $end
$var wire 1 J! wire_out1[1]~output_o $end
$var wire 1 K! wire_out1[2]~output_o $end
$var wire 1 L! wire_out1[3]~output_o $end
$var wire 1 M! wire_out1[4]~output_o $end
$var wire 1 N! wire_out1[5]~output_o $end
$var wire 1 O! wire_out1[6]~output_o $end
$var wire 1 P! wire_out2[0]~output_o $end
$var wire 1 Q! wire_out2[1]~output_o $end
$var wire 1 R! wire_out2[2]~output_o $end
$var wire 1 S! wire_out2[3]~output_o $end
$var wire 1 T! wire_out2[4]~output_o $end
$var wire 1 U! wire_out2[5]~output_o $end
$var wire 1 V! wire_out2[6]~output_o $end
$var wire 1 W! wire_out3[0]~output_o $end
$var wire 1 X! wire_out3[1]~output_o $end
$var wire 1 Y! wire_out3[2]~output_o $end
$var wire 1 Z! wire_out3[3]~output_o $end
$var wire 1 [! wire_out3[4]~output_o $end
$var wire 1 \! wire_out3[5]~output_o $end
$var wire 1 ]! wire_out3[6]~output_o $end
$var wire 1 ^! wire_negative~output_o $end
$var wire 1 _! wire_out_pcsrc[0]~output_o $end
$var wire 1 `! wire_out_pcsrc[1]~output_o $end
$var wire 1 a! wire_out_pcsrc[2]~output_o $end
$var wire 1 b! wire_out_pcsrc[3]~output_o $end
$var wire 1 c! wire_out_pcsrc[4]~output_o $end
$var wire 1 d! wire_out_pcsrc[5]~output_o $end
$var wire 1 e! wire_out_pcsrc[6]~output_o $end
$var wire 1 f! wire_out_pcsrc[7]~output_o $end
$var wire 1 g! wire_out_pcsrc[8]~output_o $end
$var wire 1 h! wire_out_pcsrc[9]~output_o $end
$var wire 1 i! wire_out_pcsrc[10]~output_o $end
$var wire 1 j! wire_out_pcsrc[11]~output_o $end
$var wire 1 k! wire_out_pcsrc[12]~output_o $end
$var wire 1 l! wire_out_pcsrc[13]~output_o $end
$var wire 1 m! wire_out_pcsrc[14]~output_o $end
$var wire 1 n! wire_out_pcsrc[15]~output_o $end
$var wire 1 o! wire_out_pcsrc[16]~output_o $end
$var wire 1 p! wire_out_pcsrc[17]~output_o $end
$var wire 1 q! wire_out_pcsrc[18]~output_o $end
$var wire 1 r! wire_out_pcsrc[19]~output_o $end
$var wire 1 s! wire_out_pcsrc[20]~output_o $end
$var wire 1 t! wire_out_pcsrc[21]~output_o $end
$var wire 1 u! wire_out_pcsrc[22]~output_o $end
$var wire 1 v! wire_out_pcsrc[23]~output_o $end
$var wire 1 w! wire_out_pcsrc[24]~output_o $end
$var wire 1 x! wire_out_pcsrc[25]~output_o $end
$var wire 1 y! wire_out_pcsrc[26]~output_o $end
$var wire 1 z! wire_out_pcsrc[27]~output_o $end
$var wire 1 {! wire_out_pcsrc[28]~output_o $end
$var wire 1 |! wire_out_pcsrc[29]~output_o $end
$var wire 1 }! wire_out_pcsrc[30]~output_o $end
$var wire 1 ~! wire_out_pcsrc[31]~output_o $end
$var wire 1 !" wire_data1[0]~output_o $end
$var wire 1 "" wire_data1[1]~output_o $end
$var wire 1 #" wire_data1[2]~output_o $end
$var wire 1 $" wire_data1[3]~output_o $end
$var wire 1 %" wire_data1[4]~output_o $end
$var wire 1 &" wire_data1[5]~output_o $end
$var wire 1 '" wire_data1[6]~output_o $end
$var wire 1 (" wire_data1[7]~output_o $end
$var wire 1 )" wire_data1[8]~output_o $end
$var wire 1 *" wire_data1[9]~output_o $end
$var wire 1 +" wire_data1[10]~output_o $end
$var wire 1 ," wire_data1[11]~output_o $end
$var wire 1 -" wire_data1[12]~output_o $end
$var wire 1 ." wire_data1[13]~output_o $end
$var wire 1 /" wire_data1[14]~output_o $end
$var wire 1 0" wire_data1[15]~output_o $end
$var wire 1 1" wire_data1[16]~output_o $end
$var wire 1 2" wire_data1[17]~output_o $end
$var wire 1 3" wire_data1[18]~output_o $end
$var wire 1 4" wire_data1[19]~output_o $end
$var wire 1 5" wire_data1[20]~output_o $end
$var wire 1 6" wire_data1[21]~output_o $end
$var wire 1 7" wire_data1[22]~output_o $end
$var wire 1 8" wire_data1[23]~output_o $end
$var wire 1 9" wire_data1[24]~output_o $end
$var wire 1 :" wire_data1[25]~output_o $end
$var wire 1 ;" wire_data1[26]~output_o $end
$var wire 1 <" wire_data1[27]~output_o $end
$var wire 1 =" wire_data1[28]~output_o $end
$var wire 1 >" wire_data1[29]~output_o $end
$var wire 1 ?" wire_data1[30]~output_o $end
$var wire 1 @" wire_data1[31]~output_o $end
$var wire 1 A" wire_RAMOutput[0]~output_o $end
$var wire 1 B" wire_RAMOutput[1]~output_o $end
$var wire 1 C" wire_RAMOutput[2]~output_o $end
$var wire 1 D" wire_RAMOutput[3]~output_o $end
$var wire 1 E" wire_RAMOutput[4]~output_o $end
$var wire 1 F" wire_RAMOutput[5]~output_o $end
$var wire 1 G" wire_RAMOutput[6]~output_o $end
$var wire 1 H" wire_RAMOutput[7]~output_o $end
$var wire 1 I" wire_RAMOutput[8]~output_o $end
$var wire 1 J" wire_RAMOutput[9]~output_o $end
$var wire 1 K" wire_RAMOutput[10]~output_o $end
$var wire 1 L" wire_RAMOutput[11]~output_o $end
$var wire 1 M" wire_RAMOutput[12]~output_o $end
$var wire 1 N" wire_RAMOutput[13]~output_o $end
$var wire 1 O" wire_RAMOutput[14]~output_o $end
$var wire 1 P" wire_RAMOutput[15]~output_o $end
$var wire 1 Q" wire_RAMOutput[16]~output_o $end
$var wire 1 R" wire_RAMOutput[17]~output_o $end
$var wire 1 S" wire_RAMOutput[18]~output_o $end
$var wire 1 T" wire_RAMOutput[19]~output_o $end
$var wire 1 U" wire_RAMOutput[20]~output_o $end
$var wire 1 V" wire_RAMOutput[21]~output_o $end
$var wire 1 W" wire_RAMOutput[22]~output_o $end
$var wire 1 X" wire_RAMOutput[23]~output_o $end
$var wire 1 Y" wire_RAMOutput[24]~output_o $end
$var wire 1 Z" wire_RAMOutput[25]~output_o $end
$var wire 1 [" wire_RAMOutput[26]~output_o $end
$var wire 1 \" wire_RAMOutput[27]~output_o $end
$var wire 1 ]" wire_RAMOutput[28]~output_o $end
$var wire 1 ^" wire_RAMOutput[29]~output_o $end
$var wire 1 _" wire_RAMOutput[30]~output_o $end
$var wire 1 `" wire_RAMOutput[31]~output_o $end
$var wire 1 a" clock~input_o $end
$var wire 1 b" clock~inputclkctrl_outclk $end
$var wire 1 c" inst_muxPCScr|Add0~0_combout $end
$var wire 1 d" inst_muxPCScr|Add0~1 $end
$var wire 1 e" inst_muxPCScr|Add0~2_combout $end
$var wire 1 f" inst_muxPCScr|Add0~3 $end
$var wire 1 g" inst_muxPCScr|Add0~4_combout $end
$var wire 1 h" inst_muxPCScr|Add0~5 $end
$var wire 1 i" inst_muxPCScr|Add0~6_combout $end
$var wire 1 j" inst_programCounter|outAddy[3]~feeder_combout $end
$var wire 1 k" inst_muxPCScr|Add0~7 $end
$var wire 1 l" inst_muxPCScr|Add0~8_combout $end
$var wire 1 m" inst_programCounter|outAddy[4]~feeder_combout $end
$var wire 1 n" inst_muxPCScr|Add0~9 $end
$var wire 1 o" inst_muxPCScr|Add0~10_combout $end
$var wire 1 p" inst_muxPCScr|Add0~11 $end
$var wire 1 q" inst_muxPCScr|Add0~12_combout $end
$var wire 1 r" inst_muxPCScr|Add0~13 $end
$var wire 1 s" inst_muxPCScr|Add0~14_combout $end
$var wire 1 t" inst_muxPCScr|Add0~15 $end
$var wire 1 u" inst_muxPCScr|Add0~16_combout $end
$var wire 1 v" inst_programCounter|outAddy[8]~feeder_combout $end
$var wire 1 w" inst_muxPCScr|Add0~17 $end
$var wire 1 x" inst_muxPCScr|Add0~18_combout $end
$var wire 1 y" inst_programCounter|outAddy[9]~feeder_combout $end
$var wire 1 z" inst_instructionMemory|Mux11~0_combout $end
$var wire 1 {" inst_instructionMemory|Mux11~1_combout $end
$var wire 1 |" inst_instructionMemory|Mux4~0_combout $end
$var wire 1 }" switches[7]~input_o $end
$var wire 1 ~" inst_instructionMemory|Mux11~2_combout $end
$var wire 1 !# inst_ALU|Mux24~0_combout $end
$var wire 1 "# switches[4]~input_o $end
$var wire 1 ## inst_muxALUScr|out[4]~2_combout $end
$var wire 1 $# switches[3]~input_o $end
$var wire 1 %# inst_muxALUScr|out[3]~3_combout $end
$var wire 1 &# switches[2]~input_o $end
$var wire 1 '# inst_muxALUScr|out[2]~4_combout $end
$var wire 1 (# switches[1]~input_o $end
$var wire 1 )# inst_muxALUScr|out[1]~5_combout $end
$var wire 1 *# switches[0]~input_o $end
$var wire 1 +# inst_muxALUScr|out[0]~6_combout $end
$var wire 1 ,# inst_outModule|comb_3|Add0~1 $end
$var wire 1 -# inst_outModule|comb_3|Add0~3 $end
$var wire 1 .# inst_outModule|comb_3|Add0~5 $end
$var wire 1 /# inst_outModule|comb_3|Add0~7 $end
$var wire 1 0# inst_outModule|comb_3|Add0~8_combout $end
$var wire 1 1# inst_outModule|comb_3|in2[4]~2_combout $end
$var wire 1 2# switches[5]~input_o $end
$var wire 1 3# inst_muxALUScr|out[5]~1_combout $end
$var wire 1 4# inst_outModule|comb_3|Add0~9 $end
$var wire 1 5# inst_outModule|comb_3|Add0~10_combout $end
$var wire 1 6# inst_outModule|comb_3|in2[5]~0_combout $end
$var wire 1 7# switches[6]~input_o $end
$var wire 1 8# inst_muxALUScr|out[6]~0_combout $end
$var wire 1 9# inst_outModule|comb_3|Add0~11 $end
$var wire 1 :# inst_outModule|comb_3|Add0~13 $end
$var wire 1 ;# inst_outModule|comb_3|Add0~14_combout $end
$var wire 1 <# inst_outModule|comb_3|LessThan0~2_combout $end
$var wire 1 =# inst_outModule|comb_3|Add0~12_combout $end
$var wire 1 ># inst_outModule|comb_3|in2[6]~1_combout $end
$var wire 1 ?# inst_outModule|comb_3|centena[1]~1_combout $end
$var wire 1 @# inst_outModule|comb_3|Add0~6_combout $end
$var wire 1 A# inst_outModule|comb_3|in2[3]~3_combout $end
$var wire 1 B# inst_outModule|comb_3|unidade~2_combout $end
$var wire 1 C# inst_outModule|comb_3|unidade~1_combout $end
$var wire 1 D# inst_outModule|comb_3|unidade~0_combout $end
$var wire 1 E# inst_outModule|comb_3|unidade~3_combout $end
$var wire 1 F# inst_outModule|comb_3|centena[1]~0_combout $end
$var wire 1 G# inst_outModule|comb_3|centena[1]~2_combout $end
$var wire 1 H# inst_outModule|comb_3|unidade~4_combout $end
$var wire 1 I# inst_outModule|comb_3|Add3~0_combout $end
$var wire 1 J# inst_outModule|comb_3|Add0~4_combout $end
$var wire 1 K# inst_outModule|comb_3|in2[2]~4_combout $end
$var wire 1 L# inst_outModule|comb_3|Add5~0_combout $end
$var wire 1 M# inst_outModule|comb_3|unidade~5_combout $end
$var wire 1 N# inst_outModule|d1|Decoder0~0_combout $end
$var wire 1 O# inst_outModule|comb_3|centena[0]~3_combout $end
$var wire 1 P# inst_outModule|d1|Decoder0~1_combout $end
$var wire 1 Q# inst_outModule|d1|Decoder0~2_combout $end
$var wire 1 R# inst_outModule|comb_3|dezena[3]~3_combout $end
$var wire 1 S# inst_outModule|comb_3|dezena[1]~1_combout $end
$var wire 1 T# inst_outModule|comb_3|dezena[2]~2_combout $end
$var wire 1 U# inst_outModule|comb_3|unidade~6_combout $end
$var wire 1 V# inst_outModule|comb_3|unidade~7_combout $end
$var wire 1 W# inst_outModule|comb_3|unidade~8_combout $end
$var wire 1 X# inst_outModule|comb_3|Add0~2_combout $end
$var wire 1 Y# inst_outModule|comb_3|in2[1]~5_combout $end
$var wire 1 Z# inst_outModule|comb_3|unidade~11_combout $end
$var wire 1 [# inst_outModule|comb_3|unidade~9_combout $end
$var wire 1 \# inst_outModule|comb_3|unidade~10_combout $end
$var wire 1 ]# inst_outModule|comb_3|dezena[0]~0_combout $end
$var wire 1 ^# inst_outModule|d2|WideOr6~0_combout $end
$var wire 1 _# inst_outModule|d2|WideOr5~0_combout $end
$var wire 1 `# inst_outModule|d2|WideOr4~0_combout $end
$var wire 1 a# inst_outModule|d2|WideOr3~0_combout $end
$var wire 1 b# inst_outModule|d2|WideOr2~0_combout $end
$var wire 1 c# inst_outModule|d2|WideOr1~0_combout $end
$var wire 1 d# inst_outModule|d2|WideOr0~0_combout $end
$var wire 1 e# inst_outModule|comb_3|unidade[3]~15_combout $end
$var wire 1 f# inst_outModule|comb_3|unidade[2]~14_combout $end
$var wire 1 g# inst_outModule|comb_3|unidade[1]~13_combout $end
$var wire 1 h# inst_outModule|comb_3|Add0~0_combout $end
$var wire 1 i# inst_outModule|comb_3|unidade[0]~12_combout $end
$var wire 1 j# inst_outModule|d3|WideOr6~0_combout $end
$var wire 1 k# inst_outModule|d3|WideOr5~0_combout $end
$var wire 1 l# inst_outModule|d3|WideOr4~0_combout $end
$var wire 1 m# inst_outModule|d3|WideOr3~0_combout $end
$var wire 1 n# inst_outModule|d3|WideOr2~0_combout $end
$var wire 1 o# inst_outModule|d3|WideOr1~0_combout $end
$var wire 1 p# inst_outModule|d3|WideOr0~0_combout $end
$var wire 1 q# inst_muxPCScr|Add0~19 $end
$var wire 1 r# inst_muxPCScr|Add0~20_combout $end
$var wire 1 s# inst_muxPCScr|Add0~21 $end
$var wire 1 t# inst_muxPCScr|Add0~22_combout $end
$var wire 1 u# inst_muxPCScr|Add0~23 $end
$var wire 1 v# inst_muxPCScr|Add0~24_combout $end
$var wire 1 w# inst_muxPCScr|Add0~25 $end
$var wire 1 x# inst_muxPCScr|Add0~26_combout $end
$var wire 1 y# inst_muxPCScr|Add0~27 $end
$var wire 1 z# inst_muxPCScr|Add0~28_combout $end
$var wire 1 {# inst_muxPCScr|Add0~29 $end
$var wire 1 |# inst_muxPCScr|Add0~30_combout $end
$var wire 1 }# inst_muxPCScr|Add0~31 $end
$var wire 1 ~# inst_muxPCScr|Add0~32_combout $end
$var wire 1 !$ inst_instructionMemory|Mux11~3_combout $end
$var wire 1 "$ inst_programCounter|outAddy [15] $end
$var wire 1 #$ inst_programCounter|outAddy [14] $end
$var wire 1 $$ inst_programCounter|outAddy [13] $end
$var wire 1 %$ inst_programCounter|outAddy [12] $end
$var wire 1 &$ inst_programCounter|outAddy [11] $end
$var wire 1 '$ inst_programCounter|outAddy [10] $end
$var wire 1 ($ inst_programCounter|outAddy [9] $end
$var wire 1 )$ inst_programCounter|outAddy [8] $end
$var wire 1 *$ inst_programCounter|outAddy [7] $end
$var wire 1 +$ inst_programCounter|outAddy [6] $end
$var wire 1 ,$ inst_programCounter|outAddy [5] $end
$var wire 1 -$ inst_programCounter|outAddy [4] $end
$var wire 1 .$ inst_programCounter|outAddy [3] $end
$var wire 1 /$ inst_programCounter|outAddy [2] $end
$var wire 1 0$ inst_programCounter|outAddy [1] $end
$var wire 1 1$ inst_programCounter|outAddy [0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1!
b1010 "
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
1.
0-
0,
0+
0*
0)
1(
0'
1&
0%
1$
0#
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0c
1j
0i
0h
0g
0f
0e
0d
1q
1p
1o
1n
0m
0l
1k
1x
0w
0v
0u
0t
0s
0r
1:!
09!
08!
07!
06!
05!
04!
03!
02!
01!
00!
0/!
0.!
0-!
0,!
0+!
0*!
0)!
0(!
0'!
0&!
0%!
0$!
0#!
0"!
0!!
0~
0}
0|
0{
0z
0y
0;!
1<!
x=!
1>!
1?!
1@!
0A!
0B!
0C!
0D!
0E!
0F!
0G!
0H!
1I!
0J!
0K!
0L!
0M!
0N!
0O!
1P!
1Q!
1R!
1S!
0T!
0U!
1V!
1W!
0X!
0Y!
0Z!
0[!
0\!
0]!
0^!
1_!
0`!
0a!
0b!
0c!
0d!
0e!
0f!
0g!
0h!
0i!
0j!
0k!
0l!
0m!
0n!
0o!
0p!
0q!
0r!
0s!
0t!
0u!
0v!
0w!
0x!
0y!
0z!
0{!
0|!
0}!
0~!
0!"
0""
0#"
0$"
0%"
0&"
0'"
0("
0)"
0*"
0+"
0,"
0-"
0."
0/"
00"
01"
02"
03"
04"
05"
06"
07"
08"
09"
0:"
0;"
0<"
0="
0>"
0?"
0@"
0A"
0B"
0C"
0D"
0E"
0F"
0G"
0H"
0I"
0J"
0K"
0L"
0M"
0N"
0O"
0P"
0Q"
0R"
0S"
0T"
1U"
0V"
0W"
0X"
0Y"
0Z"
1["
0\"
1]"
0^"
1_"
0`"
1a"
1b"
1c"
0d"
0e"
1f"
0g"
0h"
0i"
0j"
1k"
0l"
0m"
0n"
0o"
1p"
0q"
0r"
0s"
1t"
0u"
0v"
0w"
0x"
0y"
1z"
1{"
0|"
0}"
1~"
0!#
0"#
0##
1$#
1%#
0&#
0'#
1(#
1)#
0*#
0+#
1,#
1-#
0.#
1/#
10#
01#
02#
03#
04#
15#
06#
07#
08#
19#
0:#
1;#
0<#
1=#
0>#
0?#
0@#
1A#
1B#
0C#
0D#
1E#
0F#
0G#
1H#
1I#
1J#
0K#
0L#
1M#
0N#
1O#
1P#
0Q#
0R#
0S#
0T#
1U#
0V#
1W#
1X#
1Y#
1Z#
0[#
0\#
0]#
1^#
0_#
1`#
1a#
1b#
0c#
1d#
0e#
0f#
1g#
0h#
0i#
1j#
1k#
0l#
0m#
1n#
0o#
0p#
1q#
0r#
0s#
0t#
1u#
0v#
0w#
0x#
1y#
0z#
0{#
0|#
1}#
0~#
1!$
01$
00$
0/$
0.$
0-$
0,$
0+$
0*$
0)$
0($
0'$
0&$
0%$
0$$
0#$
0"$
$end
#150000
0!
0a"
0b"
#300000
1!
1a"
1b"
11$
0)#
0%#
1d"
0!$
1|"
0c"
0_!
1\"
0U"
0["
0Y#
0-#
0X#
0A#
1@#
0(
0.
1'
0:!
1e"
1`!
1e#
1]#
1.#
0J#
1V#
0I#
19!
1_#
0/#
0@#
0W#
0j#
0d#
0a#
0`#
0R!
0S!
0V!
0W!
0Q!
14#
00#
0e#
0p
0x
0k
0n
0o
09#
05#
1j#
1W!
1:#
0=#
1x
0;#
#450000
0!
0a"
0b"
#600000
1!
1a"
1b"
10$
01$
0z"
0f"
1)#
1%#
0d"
0e"
1!$
0|"
1c"
1_!
0\"
1U"
1["
0`!
1Y#
1-#
1X#
1A#
1/#
1@#
1f"
09!
1(
1.
0'
1:!
0!$
0~"
1g"
1e"
1`!
1a!
0]"
0_"
0U"
0["
0g#
0.#
1J#
0V#
1I#
04#
10#
0)#
0%#
0(
0.
0$
0&
18!
19!
0g"
0a!
0n#
0k#
1W#
19#
15#
0Y#
0-#
0X#
0A#
08!
0j#
0W!
1X!
1[!
1g#
1e#
0:#
1=#
1.#
0J#
1V#
0I#
1t
1w
0x
1n#
1k#
1;#
0/#
0@#
0W#
0X!
0[!
14#
00#
0e#
0t
0w
09#
05#
1j#
1W!
1:#
0=#
1x
0;#
#750000
0!
0a"
0b"
#900000
1!
1a"
1b"
11$
1d"
0c"
0_!
0f"
0:!
0e"
0`!
09!
1g"
1a!
18!
#1000000
